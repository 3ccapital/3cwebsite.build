{"version":3,"sources":["images/banner.png","Home.tsx","App.tsx","reportWebVitals.ts","index.tsx","candy-machine.ts"],"names":["ConnectButton","styled","WalletDialogButton","CounterText","span","MintContainer","div","renderCounter","Button","days","hours","minutes","seconds","completed","className","Home","props","useState","setBalance","isActive","setIsActive","isSoldOut","setIsSoldOut","isMinting","setIsMinting","itemsAvailable","setItemsAvailable","itemsRedeemed","setItemsRedeemed","itemsRemaining","setItemsRemaining","open","message","severity","undefined","alertState","setAlertState","Date","startDate","setStartDate","wallet","useAnchorWallet","candyMachine","setCandyMachine","refreshCandyMachineState","a","getCandyMachineState","candyMachineId","connection","goLiveDate","onMint","program","mintOneToken","config","publicKey","treasury","mintTxId","awaitTransactionSignatureConfirmation","txTimeout","status","err","msg","code","indexOf","getBalance","balance","LAMPORTS_PER_SOL","useEffect","style","backgroundImage","background","backgroundRepeat","height","padding","disabled","onClick","variant","CircularProgress","date","onMount","onComplete","renderer","Snackbar","autoHideDuration","onClose","Alert","id","data-toggle","data-target","aria-expanded","aria-controls","aria-labelledby","data-parent","DisconnectButton","WalletDisconnectButton","anchor","PublicKey","process","network","Connection","startDateSeed","parseInt","theme","createTheme","palette","type","overrides","MuiButtonBase","root","justifyContent","MuiButton","textTransform","startIcon","marginRight","endIcon","marginLeft","App","endpoint","useMemo","clusterApiUrl","wallets","getPhantomWallet","getSlopeWallet","getSolflareWallet","getSolletWallet","getSolletExtensionWallet","ThemeProvider","autoConnect","shortenAddress","toBase58","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById","CANDY_MACHINE_PROGRAM","SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID","TOKEN_METADATA_PROGRAM_ID","txid","timeout","commitment","queryStatus","done","slot","confirmations","subId","Promise","resolve","reject","setTimeout","console","log","onSignature","result","context","e","error","getSignatureStatuses","signatureStatuses","value","sleep","_signatureSubscriptions","removeSignatureListener","createAssociatedTokenAccountInstruction","associatedTokenAddress","payer","walletAddress","splTokenMintAddress","keys","pubkey","isSigner","isWritable","SystemProgram","programId","TOKEN_PROGRAM_ID","SYSVAR_RENT_PUBKEY","TransactionInstruction","data","Buffer","from","anchorWallet","provider","preflightCommitment","fetchIdl","idl","account","fetch","state","toNumber","getMasterEdition","mint","findProgramAddress","toBuffer","getMetadata","getTokenWallet","Keypair","generate","token","metadata","masterEdition","getMinimumBalanceForRentExemption","MintLayout","rent","rpc","mintNft","accounts","mintAuthority","updateAuthority","tokenMetadataProgram","tokenProgram","systemProgram","clock","SYSVAR_CLOCK_PUBKEY","signers","instructions","createAccount","fromPubkey","newAccountPubkey","space","lamports","Token","createInitMintInstruction","createMintToInstruction","address","chars","slice","ms"],"mappings":"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","file":"static/js/main.2c68a0f0.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/banner.f14c80a8.png\";","import { useEffect, useState } from \"react\";\nimport styled from \"styled-components\";\nimport Countdown from \"react-countdown\";\nimport { Button, CircularProgress, Snackbar } from \"@material-ui/core\";\nimport Alert from \"@material-ui/lab/Alert\";\n\nimport * as anchor from \"@project-serum/anchor\";\n\nimport { LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n\nimport { useAnchorWallet } from \"@solana/wallet-adapter-react\";\n\nimport { WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\n\nimport {\n  CandyMachine,\n  awaitTransactionSignatureConfirmation,\n  getCandyMachineState,\n  mintOneToken,\n  shortenAddress,\n} from \"./candy-machine\";\n\nimport background from \"./images/banner.png\"\n\nconst ConnectButton = styled(WalletDialogButton)``;\n\nconst CounterText = styled.span``; // add your styles here\n\nconst MintContainer = styled.div``; // add your styles here\n\nconst MintButton = styled(Button)``; // add your styles here\n\nexport interface HomeProps {\n  candyMachineId: anchor.web3.PublicKey;\n  config: anchor.web3.PublicKey;\n  connection: anchor.web3.Connection;\n  startDate: number;\n  treasury: anchor.web3.PublicKey;\n  txTimeout: number;\n}\n\nconst Home = (props: HomeProps) => {\n  const [balance, setBalance] = useState<number>();\n  const [isActive, setIsActive] = useState(false); // true when countdown completes\n  const [isSoldOut, setIsSoldOut] = useState(false); // true when items remaining is zero\n  const [isMinting, setIsMinting] = useState(false); // true when user got to press MINT\n\n  const [itemsAvailable, setItemsAvailable] = useState(0);\n  const [itemsRedeemed, setItemsRedeemed] = useState(0);\n  const [itemsRemaining, setItemsRemaining] = useState(0);\n\n  const [alertState, setAlertState] = useState<AlertState>({\n    open: false,\n    message: \"\",\n    severity: undefined,\n  });\n\n  const [startDate, setStartDate] = useState(new Date(props.startDate));\n\n  const wallet = useAnchorWallet();\n  const [candyMachine, setCandyMachine] = useState<CandyMachine>();\n\n  const refreshCandyMachineState = () => {\n    (async () => {\n      if (!wallet) return;\n\n      const {\n        candyMachine,\n        goLiveDate,\n        itemsAvailable,\n        itemsRemaining,\n        itemsRedeemed,\n      } = await getCandyMachineState(\n        wallet as anchor.Wallet,\n        props.candyMachineId,\n        props.connection\n      );\n\n      setItemsAvailable(itemsAvailable);\n      setItemsRemaining(itemsRemaining);\n      setItemsRedeemed(itemsRedeemed);\n\n      setIsSoldOut(itemsRemaining === 0);\n      setStartDate(goLiveDate);\n      setCandyMachine(candyMachine);\n    })();\n  };\n\n  const onMint = async () => {\n    try {\n      setIsMinting(true);\n      if (wallet && candyMachine?.program) {\n        const mintTxId = await mintOneToken(\n          candyMachine,\n          props.config,\n          wallet.publicKey,\n          props.treasury\n        );\n\n        const status = await awaitTransactionSignatureConfirmation(\n          mintTxId,\n          props.txTimeout,\n          props.connection,\n          \"singleGossip\",\n          false\n        );\n\n        if (!status?.err) {\n          setAlertState({\n            open: true,\n            message: \"Congratulations! Mint succeeded!\",\n            severity: \"success\",\n          });\n        } else {\n          setAlertState({\n            open: true,\n            message: \"Mint failed! Please try again!\",\n            severity: \"error\",\n          });\n        }\n      }\n    } catch (error: any) {\n      // TODO: blech:\n      let message = error.msg || \"Minting failed! Please try again!\";\n      if (!error.msg) {\n        if (error.message.indexOf(\"0x138\")) {\n        } else if (error.message.indexOf(\"0x137\")) {\n          message = `SOLD OUT!`;\n        } else if (error.message.indexOf(\"0x135\")) {\n          message = `Insufficient funds to mint. Please fund your wallet.`;\n        }\n      } else {\n        if (error.code === 311) {\n          message = `SOLD OUT!`;\n          setIsSoldOut(true);\n        } else if (error.code === 312) {\n          message = `Minting period hasn't started yet.`;\n        }\n      }\n\n      setAlertState({\n        open: true,\n        message,\n        severity: \"error\",\n      });\n    } finally {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n      setIsMinting(false);\n      refreshCandyMachineState();\n    }\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (wallet) {\n        const balance = await props.connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n    })();\n  }, [wallet, props.connection]);\n\n  useEffect(refreshCandyMachineState, [\n    wallet,\n    props.candyMachineId,\n    props.connection,\n  ]);\n  \n  return (\n    <main>\n      <div style={{ backgroundImage: `url(${background})`, backgroundRepeat: 'no-repeat', height:'100%' }}>\n        <div className=\"row row-cols-sm-1 row-cols-md-2\">\n          <div className=\"col px-5\">\n            <p>Organic Growth</p>\n            <p>Long Term</p>\n            <p>No Hype</p>\n          </div>\n          <div className=\"d-flex flex-column align-items-center px-5\">\n            <div className=\"d-flex flex-wrap justify-content-center\">\n              <h5>Mint a Scratch</h5>\n            </div>\n            <div className=\"d-flex flex-wrap justify-content-center\">\n              <p className=\"fs-6-ligh\">Minting will give you the perks of a Scratch Partner, the fee to help this going from scratch to hatch is 3 SOL.</p>\n            </div>\n            <div className=\"d-flex flex-wrap justify-content-center\">\n              <MintContainer>\n                <div className=\"d-flex flex-wrap justify-content-center\">\n                  {wallet && <p className=\"px-2\">Total Cavienant: {itemsAvailable}</p>}\n                  {wallet && <p className=\"px-2\">Released: {itemsRedeemed}</p>}\n                  {wallet && <p className=\"px-2\">Awaiting: {itemsRemaining}</p>}\n                </div>\n                <div className=\"d-flex flex-wrap justify-content-center\">\n                  <Button style ={{padding: \"0px\"}}\n                    disabled={isSoldOut || isMinting || !isActive}\n                    onClick={onMint}\n                    variant=\"contained\"\n                    >                  \n                    {isSoldOut ? <p className=\"p-2 m-0\">SOLD OUT</p> : (isActive && (isMinting ? (<CircularProgress />) : (wallet ? <p className=\"p-2 m-0\">RELEASE 1</p> : (<ConnectButton>Connect Wallet</ConnectButton>))))}\n                    <Countdown date={1632615120 * 1000}\n                        onMount={({ completed }) => completed && setIsActive(true)}\n                        onComplete={() => setIsActive(true)}\n                        renderer={renderCounter}\n                        />\n                  </Button>\n                </div>\n              </MintContainer>\n              <Snackbar\n                open={alertState.open}\n                autoHideDuration={6000}\n                onClose={() => setAlertState({ ...alertState, open: false })}\n                >\n                <Alert\n                  onClose={() => setAlertState({ ...alertState, open: false })}\n                  severity={alertState.severity}\n                  >\n                  {alertState.message}\n                </Alert>\n              </Snackbar>\n            </div>\n            <div className=\"d-flex flex-wrap justify-content-center\"> \n              <p className=\"text-center\"><small>You can release up to 9999 of 9999, but do it one at a time or The Cuymmandant's escape plan won't succeed and a possible Cavinant will fall in the attempt.</small></p>\n            </div>\n          </div>\n        </div>\n      </div>\n        <div className=\"col px-5\">\n          <h3>Welcome to Cavyland</h3>\n          <p>The Cavinants are the Guinea Pigs who escaped from captivity and are building the raising Cavyland.</p>\n        </div>\n      <div className=\"col px-5\">\n        <h2>Rarity</h2>\n        <p>All the Cavinants are equal but nature gave them different attributes and personalities, making some cavys more ostentatious than others.</p>\n      </div>\n      <div className=\"col px-5\">\n        <h2>Utility & Roadmap</h2>\n        <p>Holding one or more Cavinants grants you access to many perks</p>\n        <p>What we have and what we want</p>\n        <ul>\n          <li><p>Hold to EARN</p><p>50% of all royalties from trading fees will be sent back to holders on a weekly basis.</p></li>\n          <li><p>Hold to VOTE</p><p>25% of all royalties from trading fees will be sent to a mutual wallet. Yeti’s holders will be able to vote to choose how to spend those funds.</p></li>\n        </ul>\n      </div>\n      <div className=\"col px-5\">\n        <h2>FAQ's</h2>\n        <div id=\"accordion\">\n          <div className=\"card\">\n            <div className=\"card-header\" id=\"headingOne\">\n              <h5 className=\"mb-0\">\n                <button className=\"btn btn-link\" data-toggle=\"collapse\" data-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\n                  Collapsible Group Item #1\n                </button>\n              </h5>\n            </div>\n            <div id=\"collapseOne\" className=\"collapse show\" aria-labelledby=\"headingOne\" data-parent=\"#accordion\">\n              <div className=\"card-body\">\n                Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\n              </div>\n            </div>\n          </div>\n          <div className=\"card\">\n            <div className=\"card-header\" id=\"headingTwo\">\n              <h5 className=\"mb-0\">\n                <button className=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\n                  Collapsible Group Item #2\n                </button>\n              </h5>\n            </div>\n            <div id=\"collapseTwo\" className=\"collapse\" aria-labelledby=\"headingTwo\" data-parent=\"#accordion\">\n              <div className=\"card-body\">\n                Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\n              </div>\n            </div>\n          </div>\n          <div className=\"card\">\n            <div className=\"card-header\" id=\"headingThree\">\n              <h5 className=\"mb-0\">\n                <button className=\"btn btn-link collapsed\" data-toggle=\"collapse\" data-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\n                  Collapsible Group Item #3\n                </button>\n              </h5>\n            </div>\n            <div id=\"collapseThree\" className=\"collapse\" aria-labelledby=\"headingThree\" data-parent=\"#accordion\">\n              <div className=\"card-body\">\n                Anim pariatur cliche reprehenderit, enim eiusmod high life accusamus terry richardson ad squid. 3 wolf moon officia aute, non cupidatat skateboard dolor brunch. Food truck quinoa nesciunt laborum eiusmod. Brunch 3 wolf moon tempor, sunt aliqua put a bird on it squid single-origin coffee nulla assumenda shoreditch et. Nihil anim keffiyeh helvetica, craft beer labore wes anderson cred nesciunt sapiente ea proident. Ad vegan excepteur butcher vice lomo. Leggings occaecat craft beer farm-to-table, raw denim aesthetic synth nesciunt you probably haven't heard of them accusamus labore sustainable VHS.\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div className=\"col px-5\">\n        <h2>Team</h2>\n      </div>\n      <div className=\"col px-5\">\n        <p>Footer</p>\n      </div>\n    </main>\n  );\n};\n\ninterface AlertState {\n  open: boolean;\n  message: string;\n  severity: \"success\" | \"info\" | \"warning\" | \"error\" | undefined;\n}\n\nconst renderCounter = ({ days, hours, minutes, seconds, completed }: any) => {\n  if (completed) {\n    // Render a completed state\n    return <div></div>;\n  } else {\n    return (\n      <CounterText>\n        <p className=\"p-3 m -0\">Escape starts in {hours + (days || 0) * 24} hours, {minutes} minutes, {seconds} seconds</p>\n      </CounterText>\n    );\n  };\n};\n\nexport default Home;\n","import \"./App.css\";\nimport { useEffect, useState, useMemo } from \"react\";\n\nimport styled from \"styled-components\";\n\nimport Home from \"./Home\";\n\nimport * as anchor from \"@project-serum/anchor\";\nimport { clusterApiUrl, LAMPORTS_PER_SOL } from \"@solana/web3.js\";\n\nimport { WalletAdapterNetwork } from \"@solana/wallet-adapter-base\";\nimport {\n  getPhantomWallet,\n  getSlopeWallet,\n  getSolflareWallet,\n  getSolletWallet,\n  getSolletExtensionWallet,\n} from \"@solana/wallet-adapter-wallets\";\n\nimport {\n  ConnectionProvider,\n  WalletProvider,\n  useAnchorWallet,\n} from \"@solana/wallet-adapter-react\";\n\nimport {\n  CandyMachine,\n  awaitTransactionSignatureConfirmation,\n  getCandyMachineState,\n  mintOneToken,\n  shortenAddress,\n} from \"./candy-machine\";\n\nimport { WalletDialogProvider } from \"@solana/wallet-adapter-material-ui\";\nimport { WalletDisconnectButton, WalletDialogButton } from \"@solana/wallet-adapter-material-ui\";\n\nimport { createTheme, ThemeProvider } from \"@material-ui/core\";\n\nconst ConnectButton = styled(WalletDialogButton)``;\n\nconst DisconnectButton = styled(WalletDisconnectButton)``;\n\nconst treasury = new anchor.web3.PublicKey(\n  process.env.REACT_APP_TREASURY_ADDRESS!\n);\n\nconst config = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_CONFIG!\n);\n\nconst candyMachineId = new anchor.web3.PublicKey(\n  process.env.REACT_APP_CANDY_MACHINE_ID!\n);\n\nconst network = process.env.REACT_APP_SOLANA_NETWORK as WalletAdapterNetwork;\n\nconst rpcHost = process.env.REACT_APP_SOLANA_RPC_HOST!;\nconst connection = new anchor.web3.Connection(rpcHost);\n\nconst startDateSeed = parseInt(process.env.REACT_APP_CANDY_START_DATE!, 10);\n\nconst txTimeout = 30000; // milliseconds (confirm this works for your project)\n\nconst theme = createTheme({\n    palette: {\n        type: 'dark',\n    },\n    overrides: {\n        MuiButtonBase: {\n            root: {\n                justifyContent: 'flex-start',\n            },\n        },\n        MuiButton: {\n            root: {\n                textTransform: undefined,\n                padding: '12px 16px',\n            },\n            startIcon: {\n                marginRight: 8,\n            },\n            endIcon: {\n                marginLeft: 8,\n            },\n        },\n    },\n});\n\nconst App = () => {\n  const endpoint = useMemo(() => clusterApiUrl(network), []);\n  \n  const wallets = useMemo(\n    () => [\n      getPhantomWallet(),\n      getSlopeWallet(),\n      getSolflareWallet(),\n      getSolletWallet({ network }),\n      getSolletExtensionWallet({ network })\n    ],\n    []\n    );\n  \n  const [balance, setBalance] = useState<number>();\n  const wallet = useAnchorWallet();\n  const [candyMachine, setCandyMachine] = useState<CandyMachine>();\n\n  const refreshCandyMachineState = () => {\n    (async () => {\n      if (!wallet) return;\n\n      const {\n        candyMachine,\n      } = await getCandyMachineState(\n        wallet as anchor.Wallet,\n        candyMachineId,\n        connection\n      );\n\n      setCandyMachine(candyMachine);\n    })();\n  };\n\n  useEffect(() => {\n    (async () => {\n      if (wallet) {\n        const balance = await connection.getBalance(wallet.publicKey);\n        setBalance(balance / LAMPORTS_PER_SOL);\n      }\n    })();\n  }, [wallet, connection]);\n\n  useEffect(refreshCandyMachineState, [\n    wallet,\n    candyMachineId,\n    connection,\n  ]);\n\n  return (\n      <ThemeProvider theme={theme}>\n        <ConnectionProvider endpoint={endpoint}>\n          <WalletProvider wallets={wallets} autoConnect={true}>\n            <WalletDialogProvider>\n              <div className=\"navbar\">\n                <div className=\"col px-5\">\n                  <h1>Scratch A.I.</h1>\n                </div>\n                <div className=\"d-flex flex-wrap justify-content-center px-5\">\n                  {!wallet && (<ConnectButton>Connect Wallet</ConnectButton>)}\n                  {wallet && <p> Wallet: {shortenAddress(wallet.publicKey.toBase58() || \"\")}</p>}\n                  {wallet && <p className=\"px-2\"> Wallet Connected | </p>}\n                  {/* {wallet && <p> Balance: {(balance || 0).toLocaleString()} SOL </p>} */}\n                  {wallet && (<DisconnectButton>Log Out</DisconnectButton>)}\n                </div>\n              </div>\n              <Home\n                candyMachineId={candyMachineId}\n                config={config}\n                connection={connection}\n                startDate={startDateSeed}\n                treasury={treasury}\n                txTimeout={txTimeout}\n              />\n            </WalletDialogProvider>\n          </WalletProvider>\n        </ConnectionProvider>\n      </ThemeProvider>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport '../node_modules/bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import * as anchor from \"@project-serum/anchor\";\n\nimport {\n  MintLayout,\n  TOKEN_PROGRAM_ID,\n  Token,\n} from \"@solana/spl-token\";\n\nexport const CANDY_MACHINE_PROGRAM = new anchor.web3.PublicKey(\n  \"cndyAnrLdpjq1Ssp1z8xxDsB8dxe7u4HL5Nxi2K5WXZ\"\n);\n\nconst SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"ATokenGPvbdGVxr1b2hvZbsiqW5xWH25efTNsLJA8knL\"\n);\n\nconst TOKEN_METADATA_PROGRAM_ID = new anchor.web3.PublicKey(\n  \"metaqbxxUerdq28cj1RbAWkYQm3ybzjb6a8bt518x1s\"\n);\n\nexport interface CandyMachine {\n  id: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection;\n  program: anchor.Program;\n}\n\ninterface CandyMachineState {\n  candyMachine: CandyMachine;\n  itemsAvailable: number;\n  itemsRedeemed: number;\n  itemsRemaining: number;\n  goLiveDate: Date,\n}\n\nexport const awaitTransactionSignatureConfirmation = async (\n  txid: anchor.web3.TransactionSignature,\n  timeout: number,\n  connection: anchor.web3.Connection,\n  commitment: anchor.web3.Commitment = \"recent\",\n  queryStatus = false\n): Promise<anchor.web3.SignatureStatus | null | void> => {\n  let done = false;\n  let status: anchor.web3.SignatureStatus | null | void = {\n    slot: 0,\n    confirmations: 0,\n    err: null,\n  };\n  let subId = 0;\n  status = await new Promise(async (resolve, reject) => {\n    setTimeout(() => {\n      if (done) {\n        return;\n      }\n      done = true;\n      console.log(\"Rejecting for timeout...\");\n      reject({ timeout: true });\n    }, timeout);\n    try {\n      subId = connection.onSignature(\n        txid,\n        (result: any, context: any) => {\n          done = true;\n          status = {\n            err: result.err,\n            slot: context.slot,\n            confirmations: 0,\n          };\n          if (result.err) {\n            console.log(\"Rejected via websocket\", result.err);\n            reject(status);\n          } else {\n            console.log(\"Resolved via websocket\", result);\n            resolve(status);\n          }\n        },\n        commitment\n      );\n    } catch (e) {\n      done = true;\n      console.error(\"WS error in setup\", txid, e);\n    }\n    while (!done && queryStatus) {\n      // eslint-disable-next-line no-loop-func\n      (async () => {\n        try {\n          const signatureStatuses = await connection.getSignatureStatuses([\n            txid,\n          ]);\n          status = signatureStatuses && signatureStatuses.value[0];\n          if (!done) {\n            if (!status) {\n              console.log(\"REST null result for\", txid, status);\n            } else if (status.err) {\n              console.log(\"REST error for\", txid, status);\n              done = true;\n              reject(status.err);\n            } else if (!status.confirmations) {\n              console.log(\"REST no confirmations for\", txid, status);\n            } else {\n              console.log(\"REST confirmation for\", txid, status);\n              done = true;\n              resolve(status);\n            }\n          }\n        } catch (e) {\n          if (!done) {\n            console.log(\"REST connection error: txid\", txid, e);\n          }\n        }\n      })();\n      await sleep(2000);\n    }\n  });\n\n  //@ts-ignore\n  if (connection._signatureSubscriptions[subId]) {\n    connection.removeSignatureListener(subId);\n  }\n  done = true;\n  console.log(\"Returning status\", status);\n  return status;\n}\n\n/* export */ const createAssociatedTokenAccountInstruction = (\n  associatedTokenAddress: anchor.web3.PublicKey,\n  payer: anchor.web3.PublicKey,\n  walletAddress: anchor.web3.PublicKey,\n  splTokenMintAddress: anchor.web3.PublicKey\n) => {\n  const keys = [\n    { pubkey: payer, isSigner: true, isWritable: true },\n    { pubkey: associatedTokenAddress, isSigner: false, isWritable: true },\n    { pubkey: walletAddress, isSigner: false, isWritable: false },\n    { pubkey: splTokenMintAddress, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SystemProgram.programId,\n      isSigner: false,\n      isWritable: false,\n    },\n    { pubkey: TOKEN_PROGRAM_ID, isSigner: false, isWritable: false },\n    {\n      pubkey: anchor.web3.SYSVAR_RENT_PUBKEY,\n      isSigner: false,\n      isWritable: false,\n    },\n  ];\n  return new anchor.web3.TransactionInstruction({\n    keys,\n    programId: SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID,\n    data: Buffer.from([]),\n  });\n}\n\nexport const getCandyMachineState = async (\n  anchorWallet: anchor.Wallet,\n  candyMachineId: anchor.web3.PublicKey,\n  connection: anchor.web3.Connection,\n): Promise<CandyMachineState> => {\n  const provider = new anchor.Provider(connection, anchorWallet, {\n    preflightCommitment: \"recent\",\n  });\n\n  const idl = await anchor.Program.fetchIdl(\n    CANDY_MACHINE_PROGRAM,\n    provider\n  );\n\n  const program = new anchor.Program(idl, CANDY_MACHINE_PROGRAM, provider);\n  const candyMachine = {\n    id: candyMachineId,\n    connection,\n    program,\n  }\n\n  const state: any = await program.account.candyMachine.fetch(candyMachineId);\n\n  const itemsAvailable = state.data.itemsAvailable.toNumber();\n  const itemsRedeemed = state.itemsRedeemed.toNumber();\n  const itemsRemaining = itemsAvailable - itemsRedeemed;\n\n  let goLiveDate = state.data.goLiveDate.toNumber();\n  goLiveDate = new Date(goLiveDate * 1000);\n\n  console.log({\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  })\n\n  return {\n    candyMachine,\n    itemsAvailable,\n    itemsRedeemed,\n    itemsRemaining,\n    goLiveDate,\n  };\n}\n\nconst getMasterEdition = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n        Buffer.from(\"edition\"),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getMetadata = async (\n  mint: anchor.web3.PublicKey\n): Promise<anchor.web3.PublicKey> => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [\n        Buffer.from(\"metadata\"),\n        TOKEN_METADATA_PROGRAM_ID.toBuffer(),\n        mint.toBuffer(),\n      ],\n      TOKEN_METADATA_PROGRAM_ID\n    )\n  )[0];\n};\n\nconst getTokenWallet = async (\n  wallet: anchor.web3.PublicKey,\n  mint: anchor.web3.PublicKey\n) => {\n  return (\n    await anchor.web3.PublicKey.findProgramAddress(\n      [wallet.toBuffer(), TOKEN_PROGRAM_ID.toBuffer(), mint.toBuffer()],\n      SPL_ASSOCIATED_TOKEN_ACCOUNT_PROGRAM_ID\n    )\n  )[0];\n};\n\nexport const mintOneToken = async (\n  candyMachine: CandyMachine,\n  config: anchor.web3.PublicKey, // feels like this should be part of candyMachine?\n  payer: anchor.web3.PublicKey,\n  treasury: anchor.web3.PublicKey,\n): Promise<string> => {\n  const mint = anchor.web3.Keypair.generate();\n  const token = await getTokenWallet(payer, mint.publicKey);\n  const { connection, program } = candyMachine;\n  const metadata = await getMetadata(mint.publicKey);\n  const masterEdition = await getMasterEdition(mint.publicKey);\n\n  const rent = await connection.getMinimumBalanceForRentExemption(\n    MintLayout.span\n  );\n\n  return await program.rpc.mintNft({\n    accounts: {\n      config,\n      candyMachine: candyMachine.id,\n      payer: payer,\n      wallet: treasury,\n      mint: mint.publicKey,\n      metadata,\n      masterEdition,\n      mintAuthority: payer,\n      updateAuthority: payer,\n      tokenMetadataProgram: TOKEN_METADATA_PROGRAM_ID,\n      tokenProgram: TOKEN_PROGRAM_ID,\n      systemProgram: anchor.web3.SystemProgram.programId,\n      rent: anchor.web3.SYSVAR_RENT_PUBKEY,\n      clock: anchor.web3.SYSVAR_CLOCK_PUBKEY,\n    },\n    signers: [mint],\n    instructions: [\n      anchor.web3.SystemProgram.createAccount({\n        fromPubkey: payer,\n        newAccountPubkey: mint.publicKey,\n        space: MintLayout.span,\n        lamports: rent,\n        programId: TOKEN_PROGRAM_ID,\n      }),\n      Token.createInitMintInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        0,\n        payer,\n        payer\n      ),\n      createAssociatedTokenAccountInstruction(\n        token,\n        payer,\n        payer,\n        mint.publicKey\n      ),\n      Token.createMintToInstruction(\n        TOKEN_PROGRAM_ID,\n        mint.publicKey,\n        token,\n        payer,\n        [],\n        1\n      ),\n    ],\n  });\n}\n\nexport const shortenAddress = (address: string, chars = 4): string => {\n  return `${address.slice(0, chars)}...${address.slice(-chars)}`;\n};\n\nconst sleep = (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n}"],"sourceRoot":""}